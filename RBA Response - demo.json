{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "import urlparse\nimport datetime",
            "description": "",
            "hash": "4d18e38d2ceeb7f8acd588f5f103c869e85fb0ff",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_5' block\n    decision_5(container=container)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8aae98e6-002b-444e-880f-89f15f2d296a",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 24,
                        "line_start": 16,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -180,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cf18d7c4-5a25-43be-b693-0e8e10ee260a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ff7be70a-e8ff-48bb-b723-cc00e1fec986",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "28fdb0f1-2bd9-4437-a645-1f6731e6a7ae",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 15
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1c9922d5-9b25-4a1a-90e6-f9ad1ae44c34",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "369e0779-1b5a-46ce-8064-742c65c6d2b7",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ff7be70a-e8ff-48bb-b723-cc00e1fec986",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 51
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6474850b-7e2e-433a-8797-b6f843a60ef6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "078c4ec9-0c1a-463c-afdc-6eadb786a2be",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1d6342f2-7e58-422e-9a17-e4427dcda9be",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 168
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "886c1ce9-4964-45b9-b0d3-1721c166ebaa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9f6fd9b1-842b-4080-a944-1217520b4b91",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "078c4ec9-0c1a-463c-afdc-6eadb786a2be",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 188
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fea3eae4-697b-4203-9012-0a1648f398e2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "646f6e55-b1a7-4ea5-84f3-225c64fd6450",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9f6fd9b1-842b-4080-a944-1217520b4b91",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 211
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f3035ff3-7c2d-4429-ae2d-1aa5f59af2d3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8e39edde-68eb-4dc9-9819-4cf37af38c38",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "08c1df51-5286-4dd4-9bdc-22efc9018653",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 309
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9620a1f2-bedc-42bb-a86f-11fc2f6eb93f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5f70c609-d260-44f7-ad2f-f9ea5284ca03",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "646f6e55-b1a7-4ea5-84f3-225c64fd6450",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 380
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "65d14c57-e927-4d81-9dad-e9fb7317c33e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5f70c609-d260-44f7-ad2f-f9ea5284ca03",
                            "port": "out-3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(3) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9eb3b56b-2fd0-4dca-918c-5038f5ded78f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 389
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0b2c4ff9-88c6-47e6-b535-7375039d8f50",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9eb3b56b-2fd0-4dca-918c-5038f5ded78f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9f6fd9b1-842b-4080-a944-1217520b4b91",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 401
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "amount_to_modify-3": "0",
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "datetime_modify 2"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_community_datetime_modify_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_community_datetime_modify_2() called')\n    \n    legacy_custom_function_result_0 = [\n        [\n            json.loads(phantom.get_run_data(key=\"get_run_data:now\")),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            0,\n            \"minutes\",\n            \"%Y-%m-%d %H:%M:%S.%f\",\n            \"%Y-%m-%dT%H:%M:%SZ\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in legacy_custom_function_result_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'input_datetime': item0[0],\n                'amount_to_modify': item1[0],\n                'modification_unit': item1[1],\n                'input_format_string': item1[2],\n                'output_format_string': item1[3],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/datetime_modify\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/datetime_modify', parameters=parameters, name='cf_community_datetime_modify_2', callback=join_trace_email_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/datetime_modify",
                        "cfInputs": {
                            "amount_to_modify": {
                                "collectionType": "literal_values",
                                "dataPath": "0",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "input_datetime": {
                                "collectionType": "legacy_custom_function_result",
                                "dataPath": "get_run_data:custom_function:now",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "input_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%Y-%m-%d %H:%M:%S.%f",
                                "paramName": "item1[2]",
                                "type": "item"
                            },
                            "modification_unit": {
                                "collectionType": "literal_values",
                                "dataPath": "minutes",
                                "paramName": "item1[1]",
                                "type": "item"
                            },
                            "output_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%Y-%m-%dT%H:%M:%SZ",
                                "paramName": "item1[3]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 31,
                        "customFunction": "community/datetime_modify",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9eb3b56b-2fd0-4dca-918c-5038f5ded78f",
                        "inPorts": [
                            "in"
                        ],
                        "input_datetime-0": "get_run_data:custom_function:now",
                        "input_format_string-1": "%Y-%m-%d %H:%M:%S.%f",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 391,
                        "line_start": 348,
                        "message": "Configuring now",
                        "modification_unit-2": "minutes",
                        "name": "datetime_modify",
                        "notes": "",
                        "number": 2,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "output_format_string-4": "%Y-%m-%dT%H:%M:%SZ",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1080,
                            "y": -160
                        },
                        "previous_function": "",
                        "previous_name": "cf_community_datetime_modify_2",
                        "selectedCustomFunction": {
                            "description": "Change a timestamp by adding or subtracting minutes, hours, or days.",
                            "draftMode": false,
                            "id": 31,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 31,
                                    "description": "The datetime to modify, which should be provided in a string format determined by input_format_string",
                                    "id": 62,
                                    "input_type": "item",
                                    "name": "input_datetime",
                                    "placeholder": "2020-06-27T14:53:08.219016Z"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "description": "The format string to use for the input according to the Python's datetime.strptime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'",
                                    "id": 63,
                                    "input_type": "item",
                                    "name": "input_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 31,
                                    "description": "Choose a unit to modify the date by, which must be either seconds, minutes, hours, or days. If none is provided the default will be 'minutes'",
                                    "id": 64,
                                    "input_type": "item",
                                    "name": "modification_unit",
                                    "placeholder": "minutes"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "description": "The number of seconds, minutes, hours, or days to add or subtract. Use a negative number such as -1.5 to subtract time. Defaults to zero.",
                                    "id": 65,
                                    "input_type": "item",
                                    "name": "amount_to_modify",
                                    "placeholder": "0"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "description": "The format string to use for the output according to the Python's datetime.strftime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'",
                                    "id": 66,
                                    "input_type": "item",
                                    "name": "output_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                }
                            ],
                            "name": "datetime_modify",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "data_path": "datetime_string",
                                    "description": "The output datetime as formatted by the given output_format_string using Python's datetime.strftime()",
                                    "id": 93
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "data_path": "epoch_time",
                                    "description": "An integer representing the output time as a number of seconds since January 1 1970 assuming a naive UTC timezone. This is easier to use for comparisons to other epoch timestamps.",
                                    "id": 94
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "data_path": "seconds_modified",
                                    "description": "The number of seconds (positive or negative) by which the input was modified",
                                    "id": 95
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 423
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7f5a2821-674a-4a61-9998-bc011c33b680",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5f70c609-d260-44f7-ad2f-f9ea5284ca03",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fb7ae00d-f4ec-4253-8ce8-0d45c7b228b2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 438
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d49694e2-c369-40a2-a404-b674da1b5190",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fb7ae00d-f4ec-4253-8ce8-0d45c7b228b2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1267aca3-535f-4f3e-b6d5-37f5f43fcb8b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 440
                    },
                    {
                        "action": "block url",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "url": "cf_local_regex_findall_1:custom_function_result.data.group2",
                            "url_category": ""
                        },
                        "angle": 0,
                        "app": "Zscaler",
                        "appid": "ee475421-d2e4-4d8e-addb-a2ce1465d6a3",
                        "approver": "",
                        "assets": [
                            {
                                "action": "block url",
                                "actions": [
                                    "lookup url",
                                    "lookup ip",
                                    "unwhitelist url",
                                    "unwhitelist ip",
                                    "whitelist url",
                                    "whitelist ip",
                                    "unblacklist url",
                                    "unblacklist ip",
                                    "unblock url",
                                    "unblock ip",
                                    "blacklist url",
                                    "block url",
                                    "blacklist ip",
                                    "block ip",
                                    "list url categories",
                                    "get report",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Zscaler",
                                "app_version": "2.0.11",
                                "appid": "ee475421-d2e4-4d8e-addb-a2ce1465d6a3",
                                "asset_name": "zscaler",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "url": "cf_local_regex_findall_1:custom_function_result.data.group2",
                                    "url_category": ""
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "zscaler",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "URL",
                                        "column_order": 0,
                                        "contains": [
                                            "url",
                                            "domain",
                                            "url list"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com",
                                            "www.test.com, www.test123.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "zscaler url category"
                                        ],
                                        "data_path": "action_result.parameter.url_category",
                                        "data_type": "string",
                                        "example_values": [
                                            "CUSTOM_01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.configuredName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test-Block"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.customCategory",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.dbCategorizedUrls",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "CUSTOM_01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.val",
                                        "data_type": "numeric",
                                        "example_values": [
                                            128
                                        ]
                                    },
                                    {
                                        "column_name": "Ignored",
                                        "column_order": 2,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.ignored",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Updated",
                                        "column_order": 1,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.updated",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test123.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ignored: ['www.test.com'], Updated: ['www.test123.com']"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "url": {
                                        "allow_list": true,
                                        "contains": [
                                            "url",
                                            "domain",
                                            "url list"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "A list of URLs",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "url_category": {
                                        "contains": [
                                            "zscaler url category"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Add to this category",
                                        "key": "url_category",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Zscaler",
                                "product_vendor": "Zscaler",
                                "targets": "16",
                                "type": "network security"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "block url 1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def block_url_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_url_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'block_url_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_regex_findall_1:custom_function_result.data.group2'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'block_url_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        if custom_function_results_item_1[0]:\n            parameters.append({\n                'url': custom_function_results_item_1[0],\n                'url_category': \"\",\n            })\n\n    phantom.act(action=\"block url\", parameters=parameters, assets=['zscaler'], name=\"block_url_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "regex_findall",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1267aca3-535f-4f3e-b6d5-37f5f43fcb8b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 413,
                        "line_start": 391,
                        "message": "Configuring now",
                        "name": "block url",
                        "notes": "",
                        "number": 1,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2340,
                            "y": 0
                        },
                        "previous_function": "",
                        "previous_name": "block_url_1",
                        "required_params": {
                            "url": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 441
                    },
                    {
                        "action": "block url",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "url": "filtered-data:filter_4:condition_2:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                            "url_category": ""
                        },
                        "angle": 0,
                        "app": "Zscaler",
                        "appid": "ee475421-d2e4-4d8e-addb-a2ce1465d6a3",
                        "approver": "",
                        "assets": [
                            {
                                "action": "block url",
                                "actions": [
                                    "lookup url",
                                    "lookup ip",
                                    "unwhitelist url",
                                    "unwhitelist ip",
                                    "whitelist url",
                                    "whitelist ip",
                                    "unblacklist url",
                                    "unblacklist ip",
                                    "unblock url",
                                    "unblock ip",
                                    "blacklist url",
                                    "block url",
                                    "blacklist ip",
                                    "block ip",
                                    "list url categories",
                                    "get report",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Zscaler",
                                "app_version": "2.0.11",
                                "appid": "ee475421-d2e4-4d8e-addb-a2ce1465d6a3",
                                "asset_name": "zscaler",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "url": "filtered-data:filter_4:condition_2:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                                    "url_category": ""
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "zscaler",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "URL",
                                        "column_order": 0,
                                        "contains": [
                                            "url",
                                            "domain",
                                            "url list"
                                        ],
                                        "data_path": "action_result.parameter.url",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com",
                                            "www.test.com, www.test123.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "zscaler url category"
                                        ],
                                        "data_path": "action_result.parameter.url_category",
                                        "data_type": "string",
                                        "example_values": [
                                            "CUSTOM_01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.configuredName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test-Block"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.customCategory",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.dbCategorizedUrls",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "CUSTOM_01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.val",
                                        "data_type": "numeric",
                                        "example_values": [
                                            128
                                        ]
                                    },
                                    {
                                        "column_name": "Ignored",
                                        "column_order": 2,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.ignored",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Updated",
                                        "column_order": 1,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.updated",
                                        "data_type": "string",
                                        "example_values": [
                                            "www.test123.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ignored: ['www.test.com'], Updated: ['www.test123.com']"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "url": {
                                        "allow_list": true,
                                        "contains": [
                                            "url",
                                            "domain",
                                            "url list"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "A list of URLs",
                                        "key": "url",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "url_category": {
                                        "contains": [
                                            "zscaler url category"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Add to this category",
                                        "key": "url_category",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Zscaler",
                                "product_vendor": "Zscaler",
                                "targets": "16",
                                "type": "network security"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "block domain"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def block_domain(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_domain() called')\n\n    # collect data for 'block_domain' call\n    filtered_custom_function_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_4:condition_2:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value'])\n\n    parameters = []\n    \n    # build parameters list for 'block_domain' call\n    for filtered_custom_function_results_item_1 in filtered_custom_function_results_data_1:\n        if filtered_custom_function_results_item_1[0]:\n            parameters.append({\n                'url': filtered_custom_function_results_item_1[0],\n                'url_category': \"\",\n            })\n\n    phantom.act(action=\"block url\", parameters=parameters, assets=['zscaler'], name=\"block_domain\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "block domain",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b324bc1a-0ff3-4a68-9921-ebda61d3aa38",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 468,
                        "line_start": 448,
                        "message": "Configuring now",
                        "name": "block url",
                        "notes": "",
                        "number": 2,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1620,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "block_domain",
                        "required_params": {
                            "url": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 444
                    },
                    {
                        ".scmName/text": "community",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "amount_to_modify-3": "-7",
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "datetime_modify 1"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "community"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_community_datetime_modify_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_community_datetime_modify_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"create_time\"),\n        ],\n    ]\n    literal_values_0 = [\n        [\n            -7,\n            \"days\",\n            \"%Y-%m-%d %H:%M:%S.%f+00\",\n            \"%Y-%m-%dT%H:%M:%SZ\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in container_property_0:\n        for item1 in literal_values_0:\n            parameters.append({\n                'input_datetime': item0[0],\n                'amount_to_modify': item1[0],\n                'modification_unit': item1[1],\n                'input_format_string': item1[2],\n                'output_format_string': item1[3],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"community/datetime_modify\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='community/datetime_modify', parameters=parameters, name='cf_community_datetime_modify_1', callback=join_trace_email_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "community/datetime_modify",
                        "cfInputs": {
                            "amount_to_modify": {
                                "collectionType": "literal_values",
                                "dataPath": "-7",
                                "paramName": "item1[0]",
                                "type": "item"
                            },
                            "input_datetime": {
                                "collectionType": "container_property",
                                "dataPath": "container:create_time",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "input_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%Y-%m-%d %H:%M:%S.%f+00",
                                "paramName": "item1[2]",
                                "type": "item"
                            },
                            "modification_unit": {
                                "collectionType": "literal_values",
                                "dataPath": "days",
                                "paramName": "item1[1]",
                                "type": "item"
                            },
                            "output_format_string": {
                                "collectionType": "literal_values",
                                "dataPath": "%Y-%m-%dT%H:%M:%SZ",
                                "paramName": "item1[3]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 31,
                        "customFunction": "community/datetime_modify",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "646f6e55-b1a7-4ea5-84f3-225c64fd6450",
                        "inPorts": [
                            "in"
                        ],
                        "input_datetime-0": "container:create_time",
                        "input_format_string-1": "%Y-%m-%d %H:%M:%S.%f+00",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 242,
                        "line_start": 199,
                        "message": "Configuring now",
                        "modification_unit-2": "days",
                        "name": "datetime_modify",
                        "notes": "",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "output_format_string-4": "%Y-%m-%dT%H:%M:%SZ",
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1080,
                            "y": -260
                        },
                        "previous_function": "",
                        "previous_name": "cf_community_datetime_modify_1",
                        "selectedCustomFunction": {
                            "description": "Change a timestamp by adding or subtracting minutes, hours, or days.",
                            "draftMode": false,
                            "id": 31,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 31,
                                    "description": "The datetime to modify, which should be provided in a string format determined by input_format_string",
                                    "id": 62,
                                    "input_type": "item",
                                    "name": "input_datetime",
                                    "placeholder": "2020-06-27T14:53:08.219016Z"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "description": "The format string to use for the input according to the Python's datetime.strptime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'",
                                    "id": 63,
                                    "input_type": "item",
                                    "name": "input_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [
                                        ""
                                    ],
                                    "custom_function": 31,
                                    "description": "Choose a unit to modify the date by, which must be either seconds, minutes, hours, or days. If none is provided the default will be 'minutes'",
                                    "id": 64,
                                    "input_type": "item",
                                    "name": "modification_unit",
                                    "placeholder": "minutes"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "description": "The number of seconds, minutes, hours, or days to add or subtract. Use a negative number such as -1.5 to subtract time. Defaults to zero.",
                                    "id": 65,
                                    "input_type": "item",
                                    "name": "amount_to_modify",
                                    "placeholder": "0"
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "description": "The format string to use for the output according to the Python's datetime.strftime() formatting rules. If none is provided the default will be '%Y-%m-%dT%H:%M:%S.%fZ'",
                                    "id": 66,
                                    "input_type": "item",
                                    "name": "output_format_string",
                                    "placeholder": "%Y-%m-%dT%H:%M:%S.%fZ"
                                }
                            ],
                            "name": "datetime_modify",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "data_path": "datetime_string",
                                    "description": "The output datetime as formatted by the given output_format_string using Python's datetime.strftime()",
                                    "id": 93
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "data_path": "epoch_time",
                                    "description": "An integer representing the output time as a number of seconds since January 1 1970 assuming a naive UTC timezone. This is easier to use for comparisons to other epoch timestamps.",
                                    "id": 94
                                },
                                {
                                    "_pretty_custom_function": "datetime_modify",
                                    "contains_type": [],
                                    "custom_function": 31,
                                    "data_path": "seconds_modified",
                                    "description": "The number of seconds (positive or negative) by which the input was modified",
                                    "id": 95
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 1,
                            "scmName": "community"
                        },
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 447
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "47d9e16e-e4ce-4ebb-a1a3-fd5f408fab5f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5f70c609-d260-44f7-ad2f-f9ea5284ca03",
                            "port": "out-4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(4) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d62fbf90-ad2b-4f0a-baad-a7bfff7849b7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 448
                    },
                    {
                        "action": "trace email",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "EndDate": "cf_community_datetime_modify_2:custom_function_result.data.datetime_string",
                            "FromIP": "",
                            "MessageId": "",
                            "RecipientAddress": "",
                            "SenderAddress": "filtered-data:filter_4:condition_3:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                            "StartDate": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string",
                            "ToIP": "",
                            "WidgetFilter": "False"
                        },
                        "angle": 0,
                        "app": "Office 365 Email",
                        "appid": "bf3f827c-1c37-4cfa-84e0-02fded539b95",
                        "approver": "",
                        "assets": [
                            {
                                "action": "trace email",
                                "actions": [
                                    "trace email",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Office 365 Email",
                                "app_version": "1.0.1",
                                "appid": "bf3f827c-1c37-4cfa-84e0-02fded539b95",
                                "asset_name": "message_trace",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "EndDate": "cf_community_datetime_modify_2:custom_function_result.data.datetime_string",
                                    "FromIP": "",
                                    "MessageId": "",
                                    "RecipientAddress": "",
                                    "SenderAddress": "filtered-data:filter_4:condition_3:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                                    "StartDate": "cf_community_datetime_modify_1:custom_function_result.data.datetime_string",
                                    "ToIP": "",
                                    "WidgetFilter": "False"
                                },
                                "has_app": true,
                                "id": 21,
                                "loaded": false,
                                "missing": false,
                                "name": "message_trace",
                                "output": [
                                    {
                                        "column_name": "Sender",
                                        "column_order": 0,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.SenderAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "o365mc@microsoft.com"
                                        ]
                                    },
                                    {
                                        "column_name": "status",
                                        "column_order": 1,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Emails found: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Delivered"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.Index",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.EndDate",
                                        "data_type": "string",
                                        "example_values": [
                                            "/Date(1570809448312)/"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.Received",
                                        "data_type": "string",
                                        "example_values": [
                                            "/Date(1570729065255)/"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.__metadata.type",
                                        "data_type": "string",
                                        "example_values": [
                                            "TenantReporting.MessageTrace"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.*.__metadata.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://reports.office365.com/ecp/ReportingWebService/Reporting.svc/MessageTrace(0)"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.*.__metadata.uri",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://reports.office365.com/ecp/ReportingWebService/Reporting.svc/MessageTrace(0)"
                                        ]
                                    },
                                    {
                                        "column_name": "From IP",
                                        "column_order": 2,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.*.FromIP",
                                        "data_type": "string",
                                        "example_values": [
                                            "209.85.214.172"
                                        ]
                                    },
                                    {
                                        "column_name": "Recipient Address",
                                        "column_order": 3,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.*.RecipientAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "herman@phantomengineering.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Sender Address",
                                        "column_order": 4,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.*.SenderAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "matt@testphantom.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.StartDate",
                                        "data_type": "string",
                                        "example_values": [
                                            "/Date(1570636648312)/"
                                        ]
                                    },
                                    {
                                        "column_name": "Message ID",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.*.MessageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "<5d9f6c67.1c69fb81.f1728.0d54@mx.google.com>"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.Organization",
                                        "data_type": "string",
                                        "example_values": [
                                            "phantomengineering.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.Size",
                                        "data_type": "numeric",
                                        "example_values": [
                                            13211
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.*.ToIP",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message Trace ID",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.*.MessageTraceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "62a796a1-00df-43ca-3732-08d74da88f70"
                                        ]
                                    },
                                    {
                                        "column_name": "Subject",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.*.Subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test SMTP config"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.emails_found",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "EndDate": {
                                        "contains": [
                                            "email",
                                            "date",
                                            "2020-05-26T12:15:44Z",
                                            "hostname",
                                            ""
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The EndDate parameter specifies the end date of the date range. Example: 2020-05-10T01:00:00Z",
                                        "key": "EndDate",
                                        "order": 5,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "FromIP": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The IP address of the computer that sent the message. For outgoing messages from Exchange Online, the value is blank.",
                                        "key": "FromIP",
                                        "order": 6,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "MessageId": {
                                        "contains": [
                                            "email",
                                            "subject",
                                            "string",
                                            "hostname",
                                            ""
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The MessageId parameter filters the results by the Message-ID header field of the message. This value is also known as the Client ID.",
                                        "key": "MessageId",
                                        "order": 8,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "RecipientAddress": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The RecipientAddress parameter filters the results by the recipient's email address. You can specify multiple values separated by commas.                    ",
                                        "key": "RecipientAddress",
                                        "order": 1,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "SenderAddress": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The SenderAddress parameter filters the results by the sender's email address. You can specify multiple values separated by commas.",
                                        "key": "SenderAddress",
                                        "order": 0,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "StartDate": {
                                        "contains": [
                                            "email",
                                            "date",
                                            "2020-05-26T12:15:44Z",
                                            "hostname",
                                            ""
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The StartDate parameter specifies the start date of the date range. Example: 2019-09-10T01:00:00Z",
                                        "key": "StartDate",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "ToIP": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": "",
                                        "description": "The IP address or addresses to which the service attempted to deliver the message. ",
                                        "key": "ToIP",
                                        "order": 7,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    },
                                    "WidgetFilter": {
                                        "data_type": "boolean",
                                        "default": false,
                                        "description": "Widget Filter to clean certain special character.",
                                        "key": "WidgetFilter",
                                        "order": 9,
                                        "primary": false,
                                        "required": false,
                                        "value_list": []
                                    }
                                },
                                "product_name": "O365",
                                "product_vendor": "Microsoft",
                                "targets": "21",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "trace email"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def trace_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('trace_email_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'trace_email_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_community_datetime_modify_2:custom_function_result.data.datetime_string'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_community_datetime_modify_1:custom_function_result.data.datetime_string'], action_results=results)\n    filtered_custom_function_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_4:condition_3:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value'])\n\n    parameters = []\n    \n    # build parameters list for 'trace_email_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            for filtered_custom_function_results_item_1 in filtered_custom_function_results_data_1:\n                parameters.append({\n                    'ToIP': \"\",\n                    'FromIP': \"\",\n                    'EndDate': custom_function_results_item_1[0],\n                    'MessageId': \"\",\n                    'StartDate': custom_function_results_item_2[0],\n                    'WidgetFilter': False,\n                    'SenderAddress': filtered_custom_function_results_item_1[0],\n                    'RecipientAddress': \"\",\n                })\n\n    phantom.act(action=\"trace email\", parameters=parameters, assets=['message_trace'], callback=decision_4, name=\"trace_email_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "datetime_modify 1, datetime_modify 2",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9f6fd9b1-842b-4080-a944-1217520b4b91",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "def join_trace_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('join_trace_email_1() called')\n\n    # check if all connected incoming playbooks, actions, or custom functions are done i.e. have succeeded or failed\n    if phantom.completed(custom_function_names=['cf_community_datetime_modify_1', 'cf_community_datetime_modify_2']):\n        \n        # call connected block \"trace_email_1\"\n        trace_email_1(container=container, handle=handle)\n    \n    return",
                        "join_optional": [],
                        "join_start": 150,
                        "line_end": 161,
                        "line_start": 119,
                        "message": "Configuring now",
                        "name": "trace email",
                        "notes": "",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1340,
                            "y": -220
                        },
                        "previous_function": "",
                        "previous_name": "trace_email_1",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 450
                    },
                    {
                        "action": "block ip",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip": "filtered-data:filter_4:condition_4:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                            "url_category": ""
                        },
                        "angle": 0,
                        "app": "Zscaler",
                        "appid": "ee475421-d2e4-4d8e-addb-a2ce1465d6a3",
                        "approver": "",
                        "assets": [
                            {
                                "action": "block ip",
                                "actions": [
                                    "lookup url",
                                    "lookup ip",
                                    "unwhitelist url",
                                    "unwhitelist ip",
                                    "whitelist url",
                                    "whitelist ip",
                                    "unblacklist url",
                                    "unblacklist ip",
                                    "unblock url",
                                    "unblock ip",
                                    "blacklist url",
                                    "block url",
                                    "blacklist ip",
                                    "block ip",
                                    "list url categories",
                                    "get report",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Zscaler",
                                "app_version": "2.0.11",
                                "appid": "ee475421-d2e4-4d8e-addb-a2ce1465d6a3",
                                "asset_name": "zscaler",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip": "filtered-data:filter_4:condition_4:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                                    "url_category": ""
                                },
                                "has_app": true,
                                "id": 16,
                                "loaded": false,
                                "missing": false,
                                "name": "zscaler",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "IP",
                                        "column_order": 0,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_path": "action_result.parameter.ip",
                                        "data_type": "string",
                                        "example_values": [
                                            "8.8.8.8",
                                            "8.8.8.8, 208.67.222.222",
                                            "aaaa:aaaa:aaaa:aaaa:aaaa:aaaa:aaaa:aaaa"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "zscaler url category"
                                        ],
                                        "data_path": "action_result.parameter.url_category",
                                        "data_type": "string",
                                        "example_values": [
                                            "CUSTOM_01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.configuredName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test-Block"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.customCategory",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.dbCategorizedUrls",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "CUSTOM_01"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.val",
                                        "data_type": "numeric",
                                        "example_values": [
                                            128
                                        ]
                                    },
                                    {
                                        "column_name": "Ignored",
                                        "column_order": 2,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.summary.ignored",
                                        "data_type": "string",
                                        "example_values": [
                                            "8.8.8.8"
                                        ]
                                    },
                                    {
                                        "column_name": "Updated",
                                        "column_order": 1,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.summary.updated",
                                        "data_type": "string",
                                        "example_values": [
                                            "208.67.222.222"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Ignored: ['8.8.8.8'], Updated: ['208.67.222.222']"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "ip": {
                                        "allow_list": true,
                                        "contains": [
                                            "ip",
                                            "ipv6"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "A list of IPs",
                                        "key": "ip",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "url_category": {
                                        "contains": [
                                            "zscaler url category"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Add to this category",
                                        "key": "url_category",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Zscaler",
                                "product_vendor": "Zscaler",
                                "targets": "16",
                                "type": "network security"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "block ip"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def block_ip_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('block_ip_1() called')\n\n    # collect data for 'block_ip_1' call\n    filtered_custom_function_results_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_4:condition_4:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value'])\n\n    parameters = []\n    \n    # build parameters list for 'block_ip_1' call\n    for filtered_custom_function_results_item_1 in filtered_custom_function_results_data_1:\n        if filtered_custom_function_results_item_1[0]:\n            parameters.append({\n                'ip': filtered_custom_function_results_item_1[0],\n                'url_category': \"\",\n            })\n\n    phantom.act(action=\"block ip\", parameters=parameters, assets=['zscaler'], name=\"block_ip_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d62fbf90-ad2b-4f0a-baad-a7bfff7849b7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 490,
                        "line_end": 488,
                        "line_start": 468,
                        "message": "Configuring now",
                        "name": "block ip",
                        "notes": "",
                        "number": 1,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1320,
                            "y": -20
                        },
                        "previous_function": "",
                        "previous_name": "block_ip_1",
                        "required_params": {
                            "ip": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 451
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3e428249-71b6-4fd5-b268-162ef600186d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 648,
                        "line_start": 635,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 25,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 400,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 455
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_4() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"trace_email_1:action_result.summary.emails_found\", \">\", 0],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_3(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "trace email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "078c4ec9-0c1a-463c-afdc-6eadb786a2be",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 179,
                        "line_start": 161,
                        "name": "decision",
                        "notes": "",
                        "number": 4,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "trace_email_1:action_result.summary.emails_found",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1580,
                            "y": -220
                        },
                        "previous_function": "",
                        "previous_name": "decision_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "warn",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 459
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_3() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"trace_email_1:action_result.data.*.*.RecipientAddress\", \"!=\", \"\"],\n            [\"trace_email_1:action_result.data.*.*.MessageId\", \"!=\", \"\"],\n        ],\n        logical_operator='and',\n        name=\"filter_3:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        run_query_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "trace email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1d6342f2-7e58-422e-9a17-e4427dcda9be",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 199,
                        "line_start": 179,
                        "name": "filter",
                        "notes": "",
                        "number": 3,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "trace_email_1:action_result.data.*.*.RecipientAddress",
                                        "value": ""
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "trace_email_1:action_result.data.*.*.MessageId",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1720,
                            "y": -220
                        },
                        "previous_function": "",
                        "previous_name": "filter_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "warn",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 460
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0f83f310-1c7f-4407-ac53-81d9cc1b7260",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1d6342f2-7e58-422e-9a17-e4427dcda9be",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "396414de-4eb5-4247-8df0-8740401ca65f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 461
                    },
                    {
                        "action": "run query",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "body": "",
                            "email_address": "filtered-data:filter_3:condition_1:trace_email_1:action_result.data.*.*.RecipientAddress",
                            "folder": "Inbox",
                            "get_folder_id": true,
                            "internet_message_id": "filtered-data:filter_3:condition_1:trace_email_1:action_result.data.*.*.MessageId",
                            "limit": "",
                            "query": "",
                            "sender": "",
                            "subject": ""
                        },
                        "angle": 0,
                        "app": "MS Graph for Office 365",
                        "appid": "0a0a4087-10e8-4c96-9872-b740ff26d8bb",
                        "approver": "",
                        "assets": [
                            {
                                "action": "run query",
                                "actions": [
                                    "get folder id",
                                    "create folder",
                                    "run query",
                                    "get email",
                                    "delete email",
                                    "move email",
                                    "copy email",
                                    "list folders",
                                    "list groups",
                                    "list users",
                                    "list events",
                                    "oof check",
                                    "generate token",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "MS Graph for Office 365",
                                "app_version": "1.0.26",
                                "appid": "0a0a4087-10e8-4c96-9872-b740ff26d8bb",
                                "asset_name": "msgraph",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "body": "",
                                    "email_address": "filtered-data:filter_3:condition_1:trace_email_1:action_result.data.*.*.RecipientAddress",
                                    "folder": "Inbox",
                                    "get_folder_id": true,
                                    "internet_message_id": "filtered-data:filter_3:condition_1:trace_email_1:action_result.data.*.*.MessageId",
                                    "limit": "",
                                    "query": "",
                                    "sender": "",
                                    "subject": ""
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "msgraph",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string",
                                        "example_values": [
                                            "How are you doing this fine evening?"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.email_address",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "msgoffice365 mail folder",
                                            "msgoffice365 mail folder path",
                                            "msgoffice365 folder id"
                                        ],
                                        "data_path": "action_result.parameter.folder",
                                        "data_type": "string",
                                        "example_values": [
                                            "Archive"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.get_folder_id",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "msgoffice365 internet message id"
                                        ],
                                        "data_path": "action_result.parameter.internet_message_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            5
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.query",
                                        "data_type": "string",
                                        "example_values": [
                                            "$filter=contains(subject,'Urgent')",
                                            "$orderby=propertyName desc"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.sender",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "msgoffice365 subject"
                                        ],
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Just wanted to say hello"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.@odata.etag",
                                        "data_type": "string",
                                        "example_values": [
                                            "W/\"CQAAABYAAABBKXVvwEWISZupmqX4mJS3AAFOpxtE\""
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.bccRecipients.email",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.bccRecipients.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.body.content",
                                        "data_type": "string",
                                        "example_values": [
                                            "<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=iso-8859-1\">\r\n<style type=\"text/css\" style=\"display:none\">\r\n<!--\r\np\r\n\t{margin-top:0;\r\n\tmargin-bottom:0}\r\n-->\r\n</style>\r\n</head>\r\n<body dir=\"ltr\">\r\n<div style=\"font-family:Calibri,Arial,Helvetica,sans-serif; font-size:12pt; color:rgb(0,0,0)\">\r\nTest<br>\r\n</div>\r\n</body>\r\n</html>\r\n"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.body.contentType",
                                        "data_type": "string",
                                        "example_values": [
                                            "text"
                                        ]
                                    },
                                    {
                                        "column_name": "Body",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.bodyPreview",
                                        "data_type": "string",
                                        "example_values": [
                                            "How are you doing this fine evening?"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.categories",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.ccRecipients.email",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ccRecipients.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.changeKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "CQAAABYAAABBKXVvwEWISZupmqX4mJS3AAFOpxtE"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.conversationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "AAQkADU3NDk3MzJlLTY3MDQtNDE2Ny1iZDk1LTc4YjEwYzhmZDc5YQAQAGqbDRkVLxZMtetM-dKqAPo="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.createdDateTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-10-30T22:32:42Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.flag.flagStatus",
                                        "data_type": "string",
                                        "example_values": [
                                            "notFlagged"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.from.emailAddress.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.from.emailAddress.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.hasAttachments",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "column_name": "Message ID",
                                        "column_order": 4,
                                        "contains": [
                                            "msgoffice365 message id"
                                        ],
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AAMkADU3NDk3MzJlLTY3MDQtNDE2Ny1iZDk1LTc4YjEwYzhmZDc5YQBGAAAAAADJbdfk-sdvT4wwcqie92hZBwBBKXVvwEWISZupmqX4mJS3AACEV3zJAABBKXVvwEWISZupmqX4mJS3AAFOZwS4AAA="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.importance",
                                        "data_type": "string",
                                        "example_values": [
                                            "normal"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.inferenceClassification",
                                        "data_type": "string",
                                        "example_values": [
                                            "focused"
                                        ]
                                    },
                                    {
                                        "column_name": "Internet Message ID",
                                        "column_order": 5,
                                        "contains": [
                                            "msgoffice365 internet message id"
                                        ],
                                        "data_path": "action_result.data.*.internetMessageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "<CABO4XoM2X=z02-=jmuvtis3MUxHgvTcH7vkVgVC=dwcuN5yT6Q@mail.gmail.com>",
                                            "<BYAPR17MB3031A8F1998135A8D717F54495820@BYAPR17MB3031.namprd17.prod.outlook.com>"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.isDeliveryReceiptRequested",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.isDraft",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.isRead",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.isReadReceiptRequested",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.lastModifiedDateTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-10-30T22:32:53Z"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "msgoffice365 folder id"
                                        ],
                                        "data_path": "action_result.data.*.parentFolderId",
                                        "data_type": "string",
                                        "example_values": [
                                            "AAMkADU3NDk3MzJlLTY3MDQtNDE2Ny1iZDk1LTc4YjEwYzhmZDc5YQAuAAAAAADJbdfk-sdvT4wwcqie92hZAQBBKXVvwEWISZupmqX4mJS3AACEV3zJAAA="
                                        ]
                                    },
                                    {
                                        "column_name": "Received Time",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.receivedDateTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-10-30T22:32:42Z"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.replyTo",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Sender",
                                        "column_order": 0,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.sender.emailAddress.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sender.emailAddress.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sentDateTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2017-10-30T22:32:37Z"
                                        ]
                                    },
                                    {
                                        "column_name": "Subject",
                                        "column_order": 2,
                                        "contains": [
                                            "msgoffice365 subject"
                                        ],
                                        "data_path": "action_result.data.*.subject",
                                        "data_type": "string",
                                        "example_values": [
                                            "Just wanted to say hello"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.toRecipients.*.emailAddress.address",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.toRecipients.*.emailAddress.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.webLink",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://outlook.office365.com/owa/?ItemID=AAMkADU3NDk3MzJlLTY3MDQtNDE2Ny1iZDk1LTc4YjEwYzhmZDc5YQBGAAAAAADJbdfk%2FsdvT4wwcqie92hZBwBBKXVvwEWISZupmqX4mJS3AACEV3zJAABBKXVvwEWISZupmqX4mJS3AAFOZwS4AAA%3D&exvsurl=1&viewmodel=ReadMessageItem"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.emails_matched",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Emails matched: 1"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Substring to search in body",
                                        "key": "body",
                                        "order": 4,
                                        "required": false
                                    },
                                    "email_address": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "User's email (mailbox to search in)",
                                        "key": "email_address",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "folder": {
                                        "contains": [
                                            "msgoffice365 mail folder",
                                            "msgoffice365 mail folder path",
                                            "msgoffice365 folder id"
                                        ],
                                        "data_type": "string",
                                        "default": "Inbox",
                                        "description": "Destination folder; this must be either a (case-sensitive) well-known name or the internal o365 folder ID",
                                        "key": "folder",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "get_folder_id": {
                                        "data_type": "boolean",
                                        "default": true,
                                        "description": "Assume the folder parameter contains a folder name/folder path, separated by \"/\" or \"\\\" ; i.e. Inbox/dir1/dir2/dir3. If this parameter is enabled, it retrieves the folder ID for the provided folder name/folder path automatically and replaces the parameter value",
                                        "key": "get_folder_id",
                                        "order": 2,
                                        "required": false
                                    },
                                    "internet_message_id": {
                                        "contains": [
                                            "msgoffice365 internet message id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Internet message ID",
                                        "key": "internet_message_id",
                                        "order": 8,
                                        "primary": true,
                                        "required": false
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Maximum emails to return",
                                        "key": "limit",
                                        "order": 6,
                                        "required": false
                                    },
                                    "query": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "MS Graph query string",
                                        "key": "query",
                                        "order": 7,
                                        "required": false
                                    },
                                    "sender": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Sender email address to match",
                                        "key": "sender",
                                        "order": 5,
                                        "primary": true,
                                        "required": false
                                    },
                                    "subject": {
                                        "contains": [
                                            "msgoffice365 subject"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Substring to search in subject",
                                        "key": "subject",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Office 365 (MS Graph)",
                                "product_vendor": "Microsoft",
                                "targets": "20",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "run query"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def run_query_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('run_query_2() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'run_query_2' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_3:condition_1:trace_email_1:action_result.data.*.*.RecipientAddress\", \"filtered-data:filter_3:condition_1:trace_email_1:action_result.data.*.*.MessageId\", \"filtered-data:filter_3:condition_1:trace_email_1:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'run_query_2' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0]:\n            parameters.append({\n                'body': \"\",\n                'limit': \"\",\n                'query': \"\",\n                'folder': \"Inbox\",\n                'sender': \"\",\n                'subject': \"\",\n                'email_address': filtered_results_item_1[0],\n                'get_folder_id': \"true\",\n                'internet_message_id': filtered_results_item_1[1],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[2]},\n            })\n\n    phantom.act(action=\"run query\", parameters=parameters, assets=['msgraph'], callback=filter_5, name=\"run_query_2\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "trace email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "396414de-4eb5-4247-8df0-8740401ca65f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 519,
                        "line_start": 488,
                        "message": "Configuring now",
                        "name": "run query",
                        "notes": "",
                        "number": 2,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1860,
                            "y": -220
                        },
                        "previous_function": "",
                        "previous_name": "run_query_2",
                        "required_params": {
                            "email_address": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 462
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f4618216-20d9-47bd-9f49-21f86d124c47",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "396414de-4eb5-4247-8df0-8740401ca65f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "057bed7e-41c6-49d2-8018-7f4f94605fc0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 463
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_5() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"run_query_2:action_result.summary.emails_matched\", \">\", 0],\n        ],\n        name=\"filter_5:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        delete_email_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "run query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "057bed7e-41c6-49d2-8018-7f4f94605fc0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 537,
                        "line_start": 519,
                        "name": "filter",
                        "notes": "",
                        "number": 5,
                        "order": 18,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": ">",
                                        "data_type": "",
                                        "param": "run_query_2:action_result.summary.emails_matched",
                                        "value": "0"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2100,
                            "y": -220
                        },
                        "previous_function": "",
                        "previous_name": "filter_5",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "warn",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 464
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "81ede1a3-fa10-4e33-b1a0-9d1fc057b157",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "057bed7e-41c6-49d2-8018-7f4f94605fc0",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b40ce559-8461-418a-a9fc-275c8f214e4b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 465
                    },
                    {
                        "action": "delete email",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "email_address": "filtered-data:filter_5:condition_1:run_query_2:action_result.parameter.email_address",
                            "id": "filtered-data:filter_5:condition_1:run_query_2:action_result.data.*.id"
                        },
                        "angle": 0,
                        "app": "MS Graph for Office 365",
                        "appid": "0a0a4087-10e8-4c96-9872-b740ff26d8bb",
                        "approver": "",
                        "assets": [
                            {
                                "action": "delete email",
                                "actions": [
                                    "get folder id",
                                    "create folder",
                                    "run query",
                                    "get email",
                                    "delete email",
                                    "move email",
                                    "copy email",
                                    "list folders",
                                    "list groups",
                                    "list users",
                                    "list events",
                                    "oof check",
                                    "generate token",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "MS Graph for Office 365",
                                "app_version": "1.0.26",
                                "appid": "0a0a4087-10e8-4c96-9872-b740ff26d8bb",
                                "asset_name": "msgraph",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "email_address": "filtered-data:filter_5:condition_1:run_query_2:action_result.parameter.email_address",
                                    "id": "filtered-data:filter_5:condition_1:run_query_2:action_result.data.*.id"
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "msgraph",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Email",
                                        "column_order": 1,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.email_address",
                                        "data_type": "string",
                                        "example_values": [
                                            "test@testdomain.onmicrosoft.com"
                                        ]
                                    },
                                    {
                                        "column_name": "Message ID",
                                        "column_order": 0,
                                        "contains": [
                                            "msgoffice365 message id"
                                        ],
                                        "data_path": "action_result.parameter.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AAMkAGFmNTRhODA4LWIxMjQtNDJjYy05NDM2LWQ5MzY1MGFhMTkzYwBGAAAAAADRlY7ewL4xToKRDciQog5UBwBvUzMoUJx2S4nbgxzZWx2PAAAAAAEMAABvUzMoUJx2S4nbgxzZWx2PAAEIbt7NAAA="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully deleted email"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "email_address": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Email address of the mailbox owner",
                                        "key": "email_address",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    },
                                    "id": {
                                        "contains": [
                                            "msgoffice365 message id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message ID to delete",
                                        "key": "id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "Office 365 (MS Graph)",
                                "product_vendor": "Microsoft",
                                "targets": "20",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "delete email"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def delete_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('delete_email_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'delete_email_1' call\n    filtered_results_data_1 = phantom.collect2(container=container, datapath=[\"filtered-data:filter_5:condition_1:run_query_2:action_result.data.*.id\", \"filtered-data:filter_5:condition_1:run_query_2:action_result.parameter.email_address\", \"filtered-data:filter_5:condition_1:run_query_2:action_result.parameter.context.artifact_id\"])\n\n    parameters = []\n    \n    # build parameters list for 'delete_email_1' call\n    for filtered_results_item_1 in filtered_results_data_1:\n        if filtered_results_item_1[0] and filtered_results_item_1[1]:\n            parameters.append({\n                'id': filtered_results_item_1[0],\n                'email_address': filtered_results_item_1[1],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_results_item_1[2]},\n            })\n\n    phantom.act(action=\"delete email\", parameters=parameters, assets=['msgraph'], name=\"delete_email_1\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "run query",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b40ce559-8461-418a-a9fc-275c8f214e4b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 561,
                        "line_start": 537,
                        "message": "Configuring now",
                        "name": "delete email",
                        "notes": "",
                        "number": 1,
                        "order": 19,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2240,
                            "y": -220
                        },
                        "previous_function": "",
                        "previous_name": "delete_email_1",
                        "required_params": {
                            "email_address": true,
                            "id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 466
                    },
                    {
                        ".scmName/text": "rba-master",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "dynamic_prompt_pairing"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "rba-master"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_code_dark_on.svg"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_rba_master_dynamic_prompt_pairing_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_rba_master_dynamic_prompt_pairing_1() called')\n    \n    legacy_custom_function_result_0 = [\n        [\n            json.loads(phantom.get_run_data(key=\"get_run_data:output\")),\n            json.loads(phantom.get_run_data(key=\"get_run_data:responses\")),\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in legacy_custom_function_result_0:\n        parameters.append({\n            'input_json': item0[0],\n            'response': item0[1],\n        })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    parameters = []\n    \n    responses = legacy_custom_function_result_0[0][1][0]\n    input_json = json.loads(legacy_custom_function_result_0[0][0])\n    incrementer = 0\n    for item in input_json:\n        parameters.append({\n            'input_json': item,\n            'response': responses[incrementer]\n        })\n        incrementer +=1\n        \n    ####\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"rba-master/dynamic_prompt_pairing\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='rba-master/dynamic_prompt_pairing', parameters=parameters, name='cf_rba_master_dynamic_prompt_pairing_1', callback=filter_6)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "rba-master/dynamic_prompt_pairing",
                        "cfInputs": {
                            "input_json": {
                                "collectionType": "legacy_custom_function_result",
                                "dataPath": "get_run_data:custom_function:output",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "response": {
                                "collectionType": "legacy_custom_function_result",
                                "dataPath": "get_run_data:custom_function:responses",
                                "paramName": "item0[1]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "prompt",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 20,
                        "customFunction": "rba-master/dynamic_prompt_pairing",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "def cf_local_dynamic_prompt_pairing_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('cf_local_dynamic_prompt_pairing_1() called')\n\n    legacy_custom_function_result_0 = [\n        [\n            json.loads(phantom.get_run_data(key=\"get_run_data:output\")),\n            json.loads(phantom.get_run_data(key=\"get_run_data:responses\")),\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in legacy_custom_function_result_0:\n        parameters.append({\n            'input_json': item0[0],\n            'response': item0[1],\n        })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    parameters = []\n    \n    responses = legacy_custom_function_result_0[0][1][0]\n    input_json = json.loads(legacy_custom_function_result_0[0][0])\n    incrementer = 0\n    for item in input_json:\n        parameters.append({\n            'input_json': item,\n            'response': responses[incrementer]\n        })\n        incrementer +=1\n        \n    ####\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/dynamic_prompt_pairing\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/dynamic_prompt_pairing', parameters=parameters, name='cf_local_dynamic_prompt_pairing_1', callback=filter_4)\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "08c1df51-5286-4dd4-9bdc-22efc9018653",
                        "inPorts": [
                            "in"
                        ],
                        "input_json-0": "get_run_data:custom_function:output",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 348,
                        "line_start": 304,
                        "message": "Configuring now",
                        "name": "dynamic_prompt_pairing",
                        "notes": "",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 760,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "cf_rba_master_dynamic_prompt_pairing_1",
                        "response-1": "get_run_data:custom_function:responses",
                        "selectedCustomFunction": {
                            "description": "",
                            "draftMode": false,
                            "id": 444,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "dynamic_prompt_pairing",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 444,
                                    "description": "",
                                    "id": 1022,
                                    "input_type": "item",
                                    "name": "input_json",
                                    "placeholder": "json serializable"
                                },
                                {
                                    "_pretty_custom_function": "dynamic_prompt_pairing",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 444,
                                    "description": "",
                                    "id": 1023,
                                    "input_type": "item",
                                    "name": "response",
                                    "placeholder": ""
                                }
                            ],
                            "name": "dynamic_prompt_pairing",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "dynamic_prompt_pairing",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 444,
                                    "data_path": "type",
                                    "description": "item",
                                    "id": 1188
                                },
                                {
                                    "_pretty_custom_function": "dynamic_prompt_pairing",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 444,
                                    "data_path": "value",
                                    "description": "url, domain, sender, etc.",
                                    "id": 1189
                                },
                                {
                                    "_pretty_custom_function": "dynamic_prompt_pairing",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 444,
                                    "data_path": "response",
                                    "description": "Yes / No",
                                    "id": 1190
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": []
                            },
                            "scmId": 11,
                            "scmName": "rba-master"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "\n    parameters = []\n    \n    responses = legacy_custom_function_result_0[0][1][0]\n    input_json = json.loads(legacy_custom_function_result_0[0][0])\n    incrementer = 0\n    for item in input_json:\n        parameters.append({\n            'input_json': item,\n            'response': responses[incrementer]\n        })\n        incrementer +=1\n        \n    ####\n\n",
                        "warn": false,
                        "z": 467
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "get run data"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def get_run_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('get_run_data() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['prompt_1:action_result.summary.responses'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    get_run_data__output = None\n    get_run_data__responses = None\n    get_run_data__now = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    get_run_data__output = phantom.get_run_data(key='pairings')\n    get_run_data__responses = results_item_1_0\n    get_run_data__now = str(datetime.datetime.now())\n    ################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_run_data:output', value=json.dumps(get_run_data__output))\n    phantom.save_run_data(key='get_run_data:responses', value=json.dumps(get_run_data__responses))\n    phantom.save_run_data(key='get_run_data:now', value=json.dumps(get_run_data__now))\n    cf_rba_master_dynamic_prompt_pairing_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "prompt",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 9,
                        "customCodeStartLine": 13,
                        "custom_callback": "",
                        "custom_code": "def get_run_data(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('get_run_data() called')\n    results_data_1 = phantom.collect2(container=container, datapath=['prompt_1:action_result.summary.responses'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    get_run_data__output = None\n    get_run_data__responses = None\n    get_run_data__now = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    get_run_data__output = phantom.get_run_data(key='pairings')\n    get_run_data__responses = results_item_1_0\n    get_run_data__now = str(datetime.datetime.now())\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='get_run_data:output', value=json.dumps(get_run_data__output))\n    phantom.save_run_data(key='get_run_data:responses', value=json.dumps(get_run_data__responses))\n    phantom.save_run_data(key='get_run_data:now', value=json.dumps(get_run_data__now))\n    cf_local_dynamic_prompt_pairing_1(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "get run data",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8e39edde-68eb-4dc9-9819-4cf37af38c38",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 106,
                        "legacy": true,
                        "line_end": 102,
                        "line_start": 73,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "output"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "responses"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "now"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "prompt_1:action_result.summary.responses"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 520,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "get_run_data",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    get_run_data__output = phantom.get_run_data(key='pairings')\n    get_run_data__responses = results_item_1_0\n    get_run_data__now = str(datetime.datetime.now())\n    ################################################",
                        "warn": false,
                        "z": 475
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9309b8b5-6795-4e84-b15a-7cc1ac67d964",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "28fdb0f1-2bd9-4437-a645-1f6731e6a7ae",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8e39edde-68eb-4dc9-9819-4cf37af38c38",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 479
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a74b6873-b540-4837-983e-633b4d2cfe86",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "08c1df51-5286-4dd4-9bdc-22efc9018653",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "8e0eb656-4fe0-4118-be36-174c6778fcdb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 482
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-2": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": -2
                            },
                            ".outPorts>.port-2>.port-body": {
                                "port": {
                                    "id": "out-3",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-3": {
                                "port": {
                                    "id": "out-4",
                                    "type": "out"
                                },
                                "ref-x": 67,
                                "ref-y": 16
                            },
                            ".outPorts>.port-3>.port-body": {
                                "port": {
                                    "id": "out-4",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.delete image": {
                                "x": 5
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_4() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type\", \"==\", \"url\"],\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response\", \"==\", \"Yes\"],\n        ],\n        logical_operator='and',\n        name=\"filter_4:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        cf_local_regex_findall_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    # collect filtered artifact ids for 'if' condition 2\n    matched_artifacts_2, matched_results_2 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type\", \"==\", \"domain\"],\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response\", \"==\", \"Yes\"],\n        ],\n        logical_operator='and',\n        name=\"filter_4:condition_2\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_2 or matched_results_2:\n        pass\n\n    # collect filtered artifact ids for 'if' condition 3\n    matched_artifacts_3, matched_results_3 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type\", \"==\", \"sender\"],\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response\", \"==\", \"Yes\"],\n        ],\n        logical_operator='and',\n        name=\"filter_4:condition_3\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_3 or matched_results_3:\n        cf_community_datetime_modify_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_3, filtered_results=matched_results_3)\n        cf_community_datetime_modify_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_3, filtered_results=matched_results_3)\n\n    # collect filtered artifact ids for 'if' condition 4\n    matched_artifacts_4, matched_results_4 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type\", \"==\", \"ip\"],\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response\", \"==\", \"Yes\"],\n        ],\n        logical_operator='and',\n        name=\"filter_4:condition_4\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_4 or matched_results_4:\n        block_ip_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_4, filtered_results=matched_results_4)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5f70c609-d260-44f7-ad2f-f9ea5284ca03",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 304,
                        "line_start": 242,
                        "name": "filter",
                        "notes": "",
                        "number": 4,
                        "order": 10,
                        "outPorts": [
                            "out-1",
                            "out-2",
                            "out-3",
                            "out-4"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type",
                                        "value": "url"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type",
                                        "value": "domain"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type",
                                        "value": "sender"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type",
                                        "value": "ip"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1640,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "filter_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "warn",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 485
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def filter_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_6() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type\", \"==\", \"ip\"],\n            [\"cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response\", \"==\", \"Yes\"],\n        ],\n        logical_operator='and',\n        name=\"filter_6:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        format_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "dynamic_prompt_pairing",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "8e0eb656-4fe0-4118-be36-174c6778fcdb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 581,
                        "line_start": 561,
                        "name": "filter",
                        "notes": "",
                        "number": 6,
                        "order": 20,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.type",
                                        "value": "ip"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.response",
                                        "value": "Yes"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1000,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "filter_6",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 486
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "791992b0-59a0-40c5-a1e2-50e45b3b87af",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8e0eb656-4fe0-4118-be36-174c6778fcdb",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "019ecc0f-8ec6-4761-8708-6d9227ddff14",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 489
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format 1"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def format_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_1() called')\n    \n    template = \"\"\"IP \\\"{0}\\\" would have been blocked. No blocking asset configured.\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"filtered-data:filter_6:condition_1:cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.value\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_1\")\n\n    add_comment_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "dynamic_prompt_pairing",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "019ecc0f-8ec6-4761-8708-6d9227ddff14",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 606,
                        "line_start": 590,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "",
                        "number": 1,
                        "order": 22,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_6:condition_1:cf_rba_master_dynamic_prompt_pairing_1:custom_function_result.data.value"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1140,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "format_1",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "IP \"{0}\" would have been blocked. No blocking asset configured.",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 490
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4a53507f-46c3-45b8-a784-525c37b891f6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "019ecc0f-8ec6-4761-8708-6d9227ddff14",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "af0343ac-bbb7-4c70-912e-570c7d3546ab",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 492
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "artifact_id-2": "passthrough",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "regex_findall"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_regex_findall_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_regex_findall_1() called')\n    \n    filtered_custom_function_results_data_0 = phantom.collect2(container=container, datapath=['filtered-data:filter_4:condition_1:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value'])\n    literal_values_0 = [\n        [\n            \"passthrough\",\n            \"(http:\\\\/\\\\/|https:\\\\/\\\\/|^)(.*)\",\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in literal_values_0:\n        for item1 in filtered_custom_function_results_data_0:\n            parameters.append({\n                'artifact_id': item0[0],\n                'input_string': item1[0],\n                'input_pattern': item0[1],\n            })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/regex_findall\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/regex_findall', parameters=parameters, name='cf_local_regex_findall_1', callback=block_url_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/regex_findall",
                        "cfInputs": {
                            "artifact_id": {
                                "collectionType": "literal_values",
                                "dataPath": "passthrough",
                                "paramName": "item0[0]",
                                "type": "item"
                            },
                            "input_pattern": {
                                "collectionType": "literal_values",
                                "dataPath": "(http:\\/\\/|https:\\/\\/|^)(.*)",
                                "paramName": "item0[1]",
                                "type": "item"
                            },
                            "input_string": {
                                "collectionType": "filtered_custom_function_results_data",
                                "dataPath": "filtered-data:filter_4:condition_1:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                                "paramName": "item1[0]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 23,
                        "customFunction": "local/regex_findall",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fb7ae00d-f4ec-4253-8ce8-0d45c7b228b2",
                        "inPorts": [
                            "in"
                        ],
                        "input_pattern-1": "(http:\\/\\/|https:\\/\\/|^)(.*)",
                        "input_string-0": "filtered-data:filter_4:condition_1:cf_local_dynamic_prompt_pairing_1:custom_function_result.data.value",
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 448,
                        "line_start": 413,
                        "message": "Configuring now",
                        "name": "regex_findall",
                        "notes": "",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1960,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_regex_findall_1",
                        "selectedCustomFunction": {
                            "description": "Custom function implementation of re.find_all. Takes an input_string and a regex_pattern and returns matches (up to 8).",
                            "draftMode": false,
                            "id": 244,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "description": "A string to run regex against",
                                    "id": 445,
                                    "input_type": "item",
                                    "name": "input_string",
                                    "placeholder": "text"
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "description": "Regex pattern goes here",
                                    "id": 446,
                                    "input_type": "item",
                                    "name": "input_pattern",
                                    "placeholder": "[rR][eE][gG][eE][xX]+"
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [],
                                    "custom_function": 244,
                                    "description": "",
                                    "id": 447,
                                    "input_type": "item",
                                    "name": "artifact_id",
                                    "placeholder": "artifact:id"
                                }
                            ],
                            "name": "regex_findall",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "all",
                                    "description": "Entire result of re.findall",
                                    "id": 591
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group1",
                                    "description": "",
                                    "id": 592
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group2",
                                    "description": "",
                                    "id": 593
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group3",
                                    "description": "",
                                    "id": 594
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group4",
                                    "description": "",
                                    "id": 595
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group5",
                                    "description": "",
                                    "id": 596
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group6",
                                    "description": "",
                                    "id": 597
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group7",
                                    "description": "",
                                    "id": 598
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "group8",
                                    "description": "",
                                    "id": 599
                                },
                                {
                                    "_pretty_custom_function": "regex_findall",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 244,
                                    "data_path": "artifact_id",
                                    "description": "",
                                    "id": 600
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/07/6 AR Development for Phishing Playbook",
                                        "draft_mode": false,
                                        "id": 571,
                                        "name": "07/6 AR Development for Phishing Playbook",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "warn",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...",
                        "warn": false,
                        "z": 493
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def add_comment_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_1() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_1')\n\n    phantom.comment(container=container, comment=formatted_data_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "format_1:formatted_data",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "dynamic_prompt_pairing",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "af0343ac-bbb7-4c70-912e-570c7d3546ab",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 590,
                        "line_start": 581,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 1,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1380,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_1",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 494
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7652bf1e-b0db-4615-adb6-60479d8cb1d5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "8aae98e6-002b-444e-880f-89f15f2d296a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7b3d35e6-9a4a-42e4-8ceb-3d9d616ed2f1",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 496
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5fc24d16-3d37-4089-94a7-706df3ff0801",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7b3d35e6-9a4a-42e4-8ceb-3d9d616ed2f1",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "369e0779-1b5a-46ce-8064-742c65c6d2b7",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 498
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4e6e61d4-27e6-4e7f-a620-d66229d0bbd4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7b3d35e6-9a4a-42e4-8ceb-3d9d616ed2f1",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6108c897-e3c5-416c-84e2-0b2d0fd816ce",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 500
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def add_comment_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_2() called')\n\n    phantom.comment(container=container, comment=\"Container has no owner detected. Please adjust owner and try again.\")\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Container has no owner detected. Please adjust owner and try again.",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6108c897-e3c5-416c-84e2-0b2d0fd816ce",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 635,
                        "line_start": 628,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 2,
                        "order": 24,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 140,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_2",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 501
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fe0c0047-ed1e-4818-b26b-621052746d99",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6108c897-e3c5-416c-84e2-0b2d0fd816ce",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3e428249-71b6-4fd5-b268-162ef600186d",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 502
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def decision_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_5() called')\n    \n    owner_param = container.get('owner', None)\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [owner_param, \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        decision_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    add_comment_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7b3d35e6-9a4a-42e4-8ceb-3d9d616ed2f1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 628,
                        "line_start": 606,
                        "name": "decision",
                        "notes": "",
                        "number": 5,
                        "order": 23,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "container:owner",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -40,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "decision_5",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 505
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_1() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.automation_flag\", \"==\", True],\n        ],\n        name=\"filter_1:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        prompt_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ff7be70a-e8ff-48bb-b723-cc00e1fec986",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 41,
                        "line_start": 24,
                        "name": "filter",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.cef.automation_flag",
                                        "value": "True"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 240,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "filter_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": "",
                        "z": 506
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.cef.automation_flag\", \"==\", True],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "369e0779-1b5a-46ce-8064-742c65c6d2b7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 119,
                        "line_start": 102,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.cef.automation_flag",
                                        "value": "True"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 507
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "approver_display": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "# read-only block view not available",
                        "callback_code": "",
                        "callback_start": 98,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "def prompt_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('prompt_1() called')\n    \n    # set user and message variables for phantom.prompt call\n    user = container['owner']\n    message = \"\"\"The following items were identified as malicious. Please review the evidence and decide which items you would like to take action on (Yes/No).\"\"\"\n    threat_object = [item[0] for item in phantom.collect2(container=container, datapath=['filtered-data:filter_1:condition_1:artifact:*.cef.threat_object'])]\n    threat_object_type = [item[0] for item in phantom.collect2(container=container, datapath=['filtered-data:filter_1:condition_1:artifact:*.cef.threat_object_type'])]\n\n    # dynamic response builder\n    response_types = []\n    pairings = []\n    for thr_obj,thr_obj_type in zip(threat_object,threat_object_type):\n          if thr_obj:\n                response_types.append({\n                    \"prompt\": \"Block {}\".format(thr_obj),\n                    \"options\": {\n                        \"type\": \"list\",\n                        \"choices\": [\n                            \"Yes\",\n                            \"No\",\n                        ]\n                    },\n                })\n                pairings.append({thr_obj_type: thr_obj})\n    \n    phantom.save_run_data(value=json.dumps(pairings), key='pairings', auto=True)\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"prompt_1\", response_types=response_types, callback=get_run_data)\n\n    return",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "28fdb0f1-2bd9-4437-a645-1f6731e6a7ae",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 73,
                        "line_start": 41,
                        "message": "The following items were identified as malicious. Please review the Report Card and decide which items you would like to take action on (Yes/No).",
                        "name": "prompt",
                        "notes": "",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 380,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "prompt_1",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Yes/No",
                                "response_options": [
                                    "Yes",
                                    "No"
                                ],
                                "response_prompt": "",
                                "response_type": "list"
                            },
                            {
                                "response_key": "Message",
                                "response_options": [],
                                "response_prompt": "",
                                "response_type": "message"
                            },
                            {
                                "response_key": "Message",
                                "response_options": [],
                                "response_prompt": "",
                                "response_type": "message"
                            }
                        ],
                        "show_number": false,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 508
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "2.7",
        "schema": 4,
        "version": "4.9.34514"
    },
    "create_time": "2020-08-21T14:29:56.367941+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}